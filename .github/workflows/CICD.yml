name: ASP.NET MVC Auction Web-App CI/CD pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'staging'
      - 'release'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'

    - name: List directory contents
      run: ls -R
      working-directory: ./AuctionWebApplication

    - name: Restore dependencies
      run: dotnet restore AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

    - name: Build project
      run: dotnet build --configuration Release AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

    - name: Test project
      run: dotnet test AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

  code_scanning:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Analyze code with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Scan for Secrets
      uses: zricethezav/gitleaks-action@v2
      with:
        args: --no-git --path=.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency_scanning:
    runs-on: ubuntu-latest
    needs: code_scanning
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Run npm audit
      run: npm audit

    - name: Run OWASP Dependency-Check
      uses: actions/owasp-dependency-check-action@v2
      with:
        project: 'AuctionWebApplication'
        scan_path: './AuctionWebApplication'

  deploy_dev:
    runs-on: ubuntu-latest
    needs: [dependency_scanning]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.x'

    - name: Publish Artifact
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

    - name: Deploy to Development
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'feawosauctions'
        slot-name: 'Development'
        publish-profile: ${{ secrets.DEV_AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '${{ github.workspace }}/publish'

  deploy_staging:
    runs-on: ubuntu-latest
    needs: [deploy_dev]
    if: startsWith(github.ref, 'refs/tags/staging')
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.x'

    - name: Publish Artifact
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

    - name: Deploy to Staging
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'feawosauctions'
        slot-name: 'Staging'
        publish-profile: ${{ secrets.STAGING_AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '${{ github.workspace }}/publish'

  deploy_prod:
    runs-on: ubuntu-latest
    needs: [deploy_staging]
    if: startsWith(github.ref, 'refs/tags/release')
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.x'

    - name: Publish Artifact
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish AuctionWebApplication.csproj
      working-directory: ./AuctionWebApplication

    - name: Deploy to Production
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'feawosauctions'
        slot-name: 'Production'
        publish-profile: ${{ secrets.PROD_AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '${{ github.workspace }}/publish'
